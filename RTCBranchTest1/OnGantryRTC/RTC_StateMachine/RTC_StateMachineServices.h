///////////////////////////////////////////////////////////////////////////////
// RTC_StateMachineServices.h

#pragma once

#include "TcServices.h"

const ULONG DrvID_RTC_StateMachine = 0x3F000000;
#define SRVNAME_RTC_STATEMACHINE "RTC_StateMachine"

///<AutoGeneratedContent id="ClassIDs">
const CTCID CID_RTC_StateMachineCRTC_StateMachine = {0x401180ca,0xea6b,0x481a,{0x8d,0xdb,0x05,0xbb,0x59,0x75,0x63,0xd7}};
///</AutoGeneratedContent>

///<AutoGeneratedContent id="ParameterIDs">
///</AutoGeneratedContent>

///<AutoGeneratedContent id="DataTypes">
#if !defined(_TC_TYPE_1728DA78_8740_4D86_8B8F_C660299DC2D2_INCLUDED_)
#define _TC_TYPE_1728DA78_8740_4D86_8B8F_C660299DC2D2_INCLUDED_
typedef USHORT ST_POS_FB[128];
#endif // !defined(_TC_TYPE_1728DA78_8740_4D86_8B8F_C660299DC2D2_INCLUDED_)

#if !defined(_TC_TYPE_88722E24_49A2_41D9_8657_68F450A3B93F_INCLUDED_)
#define _TC_TYPE_88722E24_49A2_41D9_8657_68F450A3B93F_INCLUDED_
typedef BYTE ERROR_CODE[10];
#endif // !defined(_TC_TYPE_88722E24_49A2_41D9_8657_68F450A3B93F_INCLUDED_)

#if !defined(_TC_TYPE_9D7F90BB_2385_4F31_BC8F_CDA66538CBD5_INCLUDED_)
#define _TC_TYPE_9D7F90BB_2385_4F31_BC8F_CDA66538CBD5_INCLUDED_
typedef struct _ST_STRUCT_UINT2
{
	USHORT GantryPosition;
	USHORT RadiationIndex;
} ST_STRUCT_UINT2, *PST_STRUCT_UINT2;
#endif // !defined(_TC_TYPE_9D7F90BB_2385_4F31_BC8F_CDA66538CBD5_INCLUDED_)

#if !defined(_TC_TYPE_43BCE162_A5FC_43C8_87C5_1959F35C8F4F_INCLUDED_)
#define _TC_TYPE_43BCE162_A5FC_43C8_87C5_1959F35C8F4F_INCLUDED_
typedef ST_STRUCT_UINT2 ST_ARRAY64[64];
#endif // !defined(_TC_TYPE_43BCE162_A5FC_43C8_87C5_1959F35C8F4F_INCLUDED_)

#if !defined(_TC_TYPE_975E0A46_DD6D_4016_B498_A9AD10789FBA_INCLUDED_)
#define _TC_TYPE_975E0A46_DD6D_4016_B498_A9AD10789FBA_INCLUDED_
#pragma pack(push,1)
typedef struct _ST_PLAN_DOSE
{
	float Dose;
	float DoseRate;
	USHORT RadiationIndex;
} ST_PLAN_DOSE, *PST_PLAN_DOSE;
#pragma pack(pop)
#endif // !defined(_TC_TYPE_975E0A46_DD6D_4016_B498_A9AD10789FBA_INCLUDED_)

#if !defined(_TC_TYPE_C8B003CA_7FF8_4477_B1D5_241275F7DD19_INCLUDED_)
#define _TC_TYPE_C8B003CA_7FF8_4477_B1D5_241275F7DD19_INCLUDED_
#pragma pack(push,1)
typedef struct _ST_STRUCT_GANTRY_EXPOSE_LIST
{
	float GantryPosition;
	float GantrySpeed;
	BYTE Hour;
	BYTE Minute;
	BYTE Second;
	USHORT Millisecond;
	BYTE CollimatorType;
	BYTE PanelType;
	float PanelPosition;
	ULONG OpenSourceTimer;
} ST_STRUCT_GANTRY_EXPOSE_LIST, *PST_STRUCT_GANTRY_EXPOSE_LIST;
#pragma pack(pop)
#endif // !defined(_TC_TYPE_C8B003CA_7FF8_4477_B1D5_241275F7DD19_INCLUDED_)

#if !defined(_TC_TYPE_8397AB6D_FB6E_4D26_B356_819E8ED14211_INCLUDED_)
#define _TC_TYPE_8397AB6D_FB6E_4D26_B356_819E8ED14211_INCLUDED_
typedef float ST_ARRAY_FLOAT[16];
#endif // !defined(_TC_TYPE_8397AB6D_FB6E_4D26_B356_819E8ED14211_INCLUDED_)

typedef struct _RTC_StateMachineInputsFsm
{
	bool com_status_gui;
	unsigned char gui_cmd1;
	unsigned char gui_cmd2;
	unsigned char gui_cmd3;
	unsigned char gui_cmd4;
	unsigned char gui_cmd5;
	unsigned char gui_cmd6;
	unsigned char gui_cmd7;
	unsigned char gui_cmd8;
	struct {
		bool ModulatorCrcOk;
		bool GunCrcOk;
		bool AfcCrcOk;
		bool AfcCtrlCrcOk;
		bool DoseCrcOk;
		bool PrfCrcOk;
		bool EmulatorCrcOk;
		bool BsmCrcOk;
		bool IgsCrcOk;
	} ParaCrcStatus;
} RTC_StateMachineInputsFsm, *PRTC_StateMachineInputsFsm;

#pragma pack(push,1)
typedef struct _RTC_StateMachineOutputsFsm
{
	unsigned char required_state;
	unsigned char rtc_current_state;
	unsigned char rtc_last_state;
	struct {
		ULONG BgmInterlock1;
		ULONG BgmInterlock2;
		ULONG IgsInterlock;
		ULONG BsmInterlock1;
		ULONG BsmInterlock2;
		USHORT NGRInterlock;
	} Interlocks;
	struct {
		BYTE NGRUnready;
		BYTE BgmUnready;
		BYTE BsmUnready;
		BYTE IgsUnready;
	} Unreadys;
	ULONG Terminates;
	USHORT RadiationIndex;
	bool bSwManualMotionEn;
} RTC_StateMachineOutputsFsm, *PRTC_StateMachineOutputsFsm;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineInputsSubFsm
{
	ULONGLONG BgmInterlocks;
	ULONG BgmUnreadys;
	ULONG BgmTerminates;
	BYTE BgmCurrentState;
	BYTE BgmRequiredState;
	BYTE BgmLastState;
} RTC_StateMachineInputsSubFsm, *PRTC_StateMachineInputsSubFsm;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineOutputsSubFsm
{
	BYTE BgmRequiredState;
	BYTE BsmRequiredState;
	BYTE IgsRequiredState;
} RTC_StateMachineOutputsSubFsm, *PRTC_StateMachineOutputsSubFsm;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineInputsOGR
{
	BYTE IUT;
	BYTE CurrentState;
	USHORT RadiationIndex;
	USHORT GantryAngle;
	SHORT GantrySpeed;
	BYTE FkpButton;
} RTC_StateMachineInputsOGR, *PRTC_StateMachineInputsOGR;
#pragma pack(pop)

typedef struct _RTC_StateMachineOutputsOGR
{
	BYTE IUT;
	BYTE CurrentState;
	USHORT DoseTotal;
	USHORT RadiationIndex;
	USHORT DoseSegment;
} RTC_StateMachineOutputsOGR, *PRTC_StateMachineOutputsOGR;

#pragma pack(push,1)
typedef struct _RTC_StateMachineInputsBeam
{
	ULONG beam_total_set1;
	USHORT RadiationIndex;
	ULONG DoseRateSet;
} RTC_StateMachineInputsBeam, *PRTC_StateMachineInputsBeam;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineOutputsBeam
{
	ULONG beam_total_set1;
	USHORT RadiationIndex;
	ULONG RadiationTime;
} RTC_StateMachineOutputsBeam, *PRTC_StateMachineOutputsBeam;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineInputsDose
{
	USHORT DoseInterlockEnable;
	float DoseTotal;
	float DoseSegment;
} RTC_StateMachineInputsDose, *PRTC_StateMachineInputsDose;
#pragma pack(pop)

typedef struct _RTC_StateMachineOutputsDose
{
	bool LowDoseRateInterlock;
	bool HighDoseRateInterlock;
	USHORT DoseInterlockEnable;
} RTC_StateMachineOutputsDose, *PRTC_StateMachineOutputsDose;

#pragma pack(push,1)
typedef struct _RTC_StateMachinePlanInputs
{
	struct {
		BYTE BeamType;
		BYTE RadiationType;
		USHORT BeamNumber;
		USHORT TotalCP;
		float DoseRateSet;
		float Dose;
		float GantryAngleTolerance;
		float BeamLimitingAngleTolerance;
		float AsymxPositionTolerance;
		float AsymyPositionTolerance;
		float MlcPositionTolerance;
		float TableTopVerPositionTolerance;
		float TableTopLonPositionTolerance;
		float TableTopLatPositionTolerance;
	} BeamPlan;
	float BeamEnergyPlan[360];
	float DoseWeight[360];
	float MlcPos[360][128];
	float MlcAngle[360];
	float GantryAngle[360];
	float PssAngle[360];
	float TableVerPos[360];
	float TableLonPos[360];
	float TableLatPos[360];
	float TablePitchAngle[360];
	float TableRollAngle[360];
	BYTE MlcDir[360];
	BYTE GantryDir[360];
	BYTE PssDir[360];
	BYTE TablePitchDir[360];
	BYTE TableRollDir[360];
	bool RecvedCP[360];
	bool PlanReset;
} RTC_StateMachinePlanInputs, *PRTC_StateMachinePlanInputs;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachinePlanOutputs
{
	bool PlanReady;
} RTC_StateMachinePlanOutputs, *PRTC_StateMachinePlanOutputs;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineInputsBgmPlan
{
	WORD BeamID;
	WORD CPTotal;
	WORD CPIndex;
	BYTE BankIndex;
	ULONG Crc32;
} RTC_StateMachineInputsBgmPlan, *PRTC_StateMachineInputsBgmPlan;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineOutputsBgmPlan
{
	WORD BeamID;
	WORD CPTotal;
	WORD CPIndex;
	BYTE BankIndex;
	ST_PLAN_DOSE Data[15];
	ULONG Crc32;
	float DoseTotal;
	BYTE ServoAxisType;
} RTC_StateMachineOutputsBgmPlan, *PRTC_StateMachineOutputsBgmPlan;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineInputsIgsSlv
{
	BYTE CurrentState;
	BYTE LastState;
	unsigned char IcuFrequencyExpActual;
	unsigned char IcuKVExpActual;
	unsigned char IcuFocusExpActual;
	USHORT IcuMAExpActual;
	USHORT IcuMSExpActual;
	bool CollimatorPosReady;
	SHORT CollimatorCross;
	SHORT CollimatorLong;
	SHORT CollimatorOffsetCross;
	SHORT CollimatorOffsetLong;
	float KVPosActual;
	LONG KVEncode1;
	LONG KVEncode2;
	bool KVPosReady;
	float MVPosActual;
	LONG MVEncode1;
	LONG MVEncode2;
	bool MVPosReady;
	bool RecordFlag;
	ULONG Interlock;
	USHORT KvPanelErrorcode;
	USHORT MVPanelErrorcode;
	ULONG IcuErrorCode;
	ULONG HighVoltageGeneratorErrorCode;
	SHORT RecordCounter;
} RTC_StateMachineInputsIgsSlv, *PRTC_StateMachineInputsIgsSlv;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineOutputsIgsSlv
{
	BYTE RequiredState;
	unsigned char WorkMode;
	unsigned char IcuFrequencyExp;
	unsigned char IcuKVExp;
	unsigned char IcuFocusExp;
	USHORT IcuMAExp;
	USHORT IcuMSExp;
	SHORT CollimatorCross;
	SHORT CollimatorLong;
	SHORT CollimatorOffsetCross;
	SHORT CollimatorOffsetLong;
	float KVPosTarget;
	float MVPosTarget;
	LONG KVOffset1;
	LONG KVOffset2;
	LONG MVOffset1;
	LONG MVOffset2;
	bool Reset;
	USHORT KvTimeout;
	USHORT MvTimeout;
	USHORT PlanTotalFrame;
} RTC_StateMachineOutputsIgsSlv, *PRTC_StateMachineOutputsIgsSlv;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineInputsBsm
{
	BYTE CurrentState;
	BYTE LastState;
	USHORT RadiationIndex;
	USHORT BeamID;
	USHORT CPTotal;
	USHORT CPIndex;
	BYTE BankIndex;
	SHORT PosFeedback[128];
	ULONG Crc32;
	float HeadP1;
	float HeadP2;
	float UpJaw1P1;
	float UpJaw1P2;
	float UpJaw2P1;
	float UpJaw2P2;
	BYTE ErrorCode[10];
	ULONGLONG Interlock;
	ULONGLONG InitResult1;
	ULONGLONG InitResult2;
	bool BsmReady;
	USHORT Status;
	BYTE BSMInitModeAck;
	bool FieldLightFrmBSC;
	float HeadSpeed;
	BYTE CollimatorPosition;
	float LeafMaxSpeed;
	float JawMaxSpeed;
	BYTE BsmMotionEnable;
	bool OdiLight;
	SHORT WheelBsm1;
	SHORT WheelBsm2;
	SHORT WheelBsm3;
} RTC_StateMachineInputsBsm, *PRTC_StateMachineInputsBsm;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineOutputsBsm
{
	BYTE RequiredState;
	USHORT RadiationIndex;
	USHORT BeamID;
	USHORT CPTotal;
	USHORT CPIndex;
	BYTE BankIndex;
	LONG Data[64];
	ULONG Crc32;
	ULONG UpJaw1Pos;
	ULONG UpJaw2Pos;
	float UpJaw1Speed;
	float UpJaw2Speed;
	float HeadAngle;
	float HeadSpeed;
	BYTE BsmOk;
	BYTE Commands;
	BYTE HhcFunctionCode;
	USHORT HhcVoltage;
	USHORT HwEnable;
	float CalibrationJaw[16];
	USHORT ToleranceLeaf;
	USHORT ToleranceJawX;
	USHORT ToleranceJawY;
	BYTE BSMInitMode;
	float HeadAngleOffset;
	USHORT HeadTolerance;
	float HeadAngleK;
	BYTE CollimatorPosition;
	float HeadAngleSecondaryK;
	ULONG HeadLimitEncoder;
	float LeafMaxSpeed;
	float JawMaxSpeed;
	SHORT HHCWheel1;
	SHORT HHCWheel2;
	SHORT HHCWheel3;
	SHORT CollimatorDegree;
} RTC_StateMachineOutputsBsm, *PRTC_StateMachineOutputsBsm;
#pragma pack(pop)

typedef struct _RTC_StateMachineInputsVMAT
{
	float GantryMaxSpeed;
	float MlcMaxSpeed;
	float DoseMaxSpeed;
} RTC_StateMachineInputsVMAT, *PRTC_StateMachineInputsVMAT;

#pragma pack(push,1)
typedef struct _RTC_StateMachineOutputsVMAT
{
} RTC_StateMachineOutputsVMAT, *PRTC_StateMachineOutputsVMAT;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineInputsCtrlState
{
	struct {
		bool RgsCtrl;
		bool BsmCtrl;
		bool IgsCtrl;
	} ControllerEmuMode;
} RTC_StateMachineInputsCtrlState, *PRTC_StateMachineInputsCtrlState;
#pragma pack(pop)

typedef struct _RTC_StateMachineOutputsCtrlState
{
	struct {
		bool RgsCtrl;
		bool BsmCtrl;
		bool IgsCtrl;
	} ControllerEmuSet;
	BYTE WatchDogState;
} RTC_StateMachineOutputsCtrlState, *PRTC_StateMachineOutputsCtrlState;

typedef struct _RTC_StateMachineInputsOnGantryHD
{
	bool GantryTouchGuard;
	bool AutoMoveEn;
} RTC_StateMachineInputsOnGantryHD, *PRTC_StateMachineInputsOnGantryHD;

typedef struct _RTC_StateMachineOutputsOnGantryHD
{
	bool SwCanOpenOk;
	bool SwEthercatInOk;
	bool SwOnGantryMoveEn;
	bool SwEthercatOutOk;
	bool SwRST;
	bool SwKvEn;
} RTC_StateMachineOutputsOnGantryHD, *PRTC_StateMachineOutputsOnGantryHD;

#pragma pack(push,1)
typedef struct _RTC_StateMachineInputsBsmFmGUI
{
	bool EmulatorEnable;
	BYTE BSMOk;
	float HeadSpeed;
	float UpJaw1Speed;
	float UpJaw2Speed;
	USHORT BSMEnalbe;
	float CalibrationJaw[16];
	BYTE BSMInitMode;
	float HeadAnagle;
	float HeadAngleOffset;
	float HeadAngleK;
	BYTE CollimatorPosition;
	float HeadAngleSecondaryK;
	ULONG HeadLimitEncoder;
} RTC_StateMachineInputsBsmFmGUI, *PRTC_StateMachineInputsBsmFmGUI;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineOutptsBsmToGUI
{
	float MLCActPos[128];
	bool EmulatorMode;
	float HeadP1;
	float HeadP2;
	float Jaw1_P1;
	float Jaw1_P2;
	float Jaw2_P1;
	float Jaw2_P2;
	USHORT BSMStatus;
	float HeadSpeed;
	BYTE CollimatorPosition;
	ULONG InitResults0;
	ULONG InitResults1;
	ULONG InitResults2;
	ULONG InitResults3;
	float LeafMaxSpeed;
	float JawMaxSpeed;
} RTC_StateMachineOutptsBsmToGUI, *PRTC_StateMachineOutptsBsmToGUI;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineInputsIgs
{
	BYTE WorkMode;
	USHORT KVTimeOut;
	USHORT MVTimeOut;
	SHORT CollimatorCross;
	SHORT CollimatorLong;
	SHORT CollimatorOffsetCross;
	SHORT CollimatorOffsetLong;
	LONG KVOffset1;
	LONG KVOffset2;
	LONG MVOffset1;
	LONG MVOffset2;
	float KvWorkPosH;
	float KvWorkPosF;
	float MvWorkPosX;
	float MvWorkPosY;
	BYTE IcuFocusExp;
	BYTE IcuFrequencyExp;
	BYTE IcuKVExp;
	USHORT IcuMAExp;
	USHORT IcuMSExp;
	BYTE Protocal;
	BYTE SynchronousSequence;
	BYTE FullHalfShape;
} RTC_StateMachineInputsIgs, *PRTC_StateMachineInputsIgs;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineOutputsIgs
{
	bool MvPosReady;
	bool KvPosReady;
	bool CollimatorPosReady;
	USHORT KvPanelErrorcode;
	USHORT MVPanelErrorco;
	SHORT CollimatorCross;
	SHORT CollimatorLong;
	SHORT CollimatorOffsetCross;
	SHORT CollimatorOffsetLong;
	LONG KVOffset1;
	LONG KVOffset2;
	LONG MVOffset1;
	LONG MVOffset2;
	ULONG IcuErrorCode;
	ULONG HighVoltageGeneratorErrorCode;
	float KvPosition;
	float MvPosition;
	BYTE IcuFocusExp;
	BYTE IcuFrequencyExp;
	BYTE IcuKVExp;
	USHORT IcuMAExp;
	USHORT IcuMSExp;
	USHORT ExpolistLong;
	ST_STRUCT_GANTRY_EXPOSE_LIST GantryExposeList[30][20];
	USHORT ExposeListGroup;
	USHORT ExposeListNum;
} RTC_StateMachineOutputsIgs, *PRTC_StateMachineOutputsIgs;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineFmDevices
{
	USHORT CANOpen;
	USHORT BGMSlave;
	USHORT BSMSlave;
	bool OnGantryRTCWdOk;
	bool BsmWdOk;
	bool BgmWdOk;
	bool IgsWdOk;
	bool RgsWdOk;
	USHORT IGSSlave;
} RTC_StateMachineFmDevices, *PRTC_StateMachineFmDevices;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RTC_StateMachineIUTMonitor
{
	struct {
		bool HardwareEtherCAT;
		bool HardwareCANOpen;
		bool SlaveNotSync;
		bool OgrNotSync;
	} InterlockNGR;
	struct {
		bool MachineParameter;
		bool ModStanby;
		bool ModHV;
		bool ModTrig;
		bool ModCom;
		bool CoolingIntl1;
		bool CoolingIntl2;
		bool WaterFlow;
		bool CoolingCom;
		bool GunHeater;
		bool GunHV;
		bool GunTrig;
		bool Vac;
		bool GasLow;
		bool GasHigh;
		bool RadiationTime;
		bool BgmHV;
		bool HvContactorError;
		bool ControllerOk;
		bool SlipringHV;
		bool SlipringTreatEN;
		bool Dose1WriteTimeOut;
		bool Dose1Symmetry;
		bool Dose1EtherCAT;
		bool Dose1DarkExceed;
		bool Dose1TotalExceed;
		bool Dose2WriteTimeOut;
		bool Dose2Symmetry;
		bool Dose2EtherCAT;
		bool Dose2DarkExceed;
		bool Dose2TotalExceed;
		bool DoseDualChannelExceed;
		bool DoseInformation;
		bool DoseDummyTimeOut;
		bool DoseHardware;
	} InterlockBGM;
	struct {
		bool Case;
	} UnreadyNGR;
	struct {
		bool ModulatorUnready;
		bool GunUnready;
		bool DoseBoardUnready;
	} UnreadyBGM;
} RTC_StateMachineIUTMonitor, *PRTC_StateMachineIUTMonitor;
#pragma pack(pop)

///</AutoGeneratedContent>



///<AutoGeneratedContent id="DataAreaIDs">
#define ADI_RTC_StateMachineInputsFsm 1
#define ADI_RTC_StateMachineOutputsFsm 2
#define ADI_RTC_StateMachineInputsSubFsm 5
#define ADI_RTC_StateMachineOutputsSubFsm 6
#define ADI_RTC_StateMachineInputsOGR 7
#define ADI_RTC_StateMachineOutputsOGR 8
#define ADI_RTC_StateMachineInputsBeam 11
#define ADI_RTC_StateMachineOutputsBeam 12
#define ADI_RTC_StateMachineInputsDose 13
#define ADI_RTC_StateMachineOutputsDose 14
#define ADI_RTC_StateMachinePlanInputs 3
#define ADI_RTC_StateMachinePlanOutputs 4
#define ADI_RTC_StateMachineInputsBgmPlan 15
#define ADI_RTC_StateMachineOutputsBgmPlan 16
#define ADI_RTC_StateMachineInputsIgsSlv 17
#define ADI_RTC_StateMachineOutputsIgsSlv 18
#define ADI_RTC_StateMachineInputsBsm 19
#define ADI_RTC_StateMachineOutputsBsm 20
#define ADI_RTC_StateMachineInputsVMAT 21
#define ADI_RTC_StateMachineOutputsVMAT 22
#define ADI_RTC_StateMachineInputsCtrlState 23
#define ADI_RTC_StateMachineOutputsCtrlState 24
#define ADI_RTC_StateMachineInputsOnGantryHD 25
#define ADI_RTC_StateMachineOutputsOnGantryHD 26
#define ADI_RTC_StateMachineInputsBsmFmGUI 27
#define ADI_RTC_StateMachineOutptsBsmToGUI 28
#define ADI_RTC_StateMachineInputsIgs 29
#define ADI_RTC_StateMachineOutputsIgs 30
#define ADI_RTC_StateMachineFmDevices 9
#define ADI_RTC_StateMachineIUTMonitor 10
///</AutoGeneratedContent>

///<AutoGeneratedContent id="InterfaceIDs">
///</AutoGeneratedContent>
